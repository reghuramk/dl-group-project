Conclusions

For this project, my individual contribution focused on building a neural network model that processes the time series data 
by treating each time instance independently. This approach involved using a feedforward neural network (FNN) architecture with 
fully connected layers to predict the stock price based solely on the timestamp feature, disregarding temporal relationships. 
I applied data preprocessing steps, including converting the date column to datetime format, sorting the data chronologically, 
and normalizing both the input (X) and target (y) values to enhance model stability and improve training efficiency. The data was 
split into training (80%) and test (20%) sets to ensure that the model was evaluated on unseen data, providing a more realistic 
assessment of its performance. I compiled the model using the Adam optimizer and the mean squared error (MSE) loss function, 
which are effective choices for regression tasks. The model's performance was evaluated using the Mean Absolute Error (MAE), 
providing a clear metric of its accuracy on test data.

Reflections on my work

Through this task, I gained practical experience in preprocessing and normalizing time series data, as well as designing and 
training a basic regression model using Keras. The process of splitting the data into training and test sets allowed me to assess 
the model's generalization ability, ensuring that the evaluation was not biased by overfitting. Treating each time step as an independent 
data point simplified the forecasting task into a straightforward regression problem, making it easier to implement and interpret.
While this model does not capture the temporal dependencies inherent in time series data, it serves as a strong baseline for comparison 
with more advanced models. The expected outcome was to create a simple yet effective model that establishes a benchmark for evaluating
the performance of time series-specific models later in the project.